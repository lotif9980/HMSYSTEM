@* @model IEnumerable<Bed> *@
@using HMSYSTEM.ViewModels
@model PaginationViewModel<Bed>
@using HMSYSTEM.Enum

<div class="container-fluid mt-3">
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-around">
                    <div> <h3 class="card-title">Existing Bed List</h3></div>
                    <div> <a class="btn btn-info" asp-controller="Bed" asp-action="Save">Create</a></div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th style="width: 10px">Id</th>
                                <th>Ward Name</th>
                                <th>Bed Number</th>
                                <th>Bed Type</th>
                                <th>Status</th>
                                <th style="width:20px;text-align:center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int count = ((Model.CurrentPage-1)*Model.PageSize)+1;
                            }
                            @foreach (Bed item in Model.Items)
                            {
                                <tr>
                                    <td>@count</td>
                                    <td>@item.Ward.Name</td>
                                    <td>@item.BedNumber</td>
                                    <td>
                                        @(item.BedType == BedType.General ? "General" :
                                         item.BedType == BedType.SemiPrivate ? "SemiPrivate" : "ICU")
                                    </td>
                                    <td>
                                        <div class="d-flex justify-content-center">
                                            @(item.IsOccupied ? "Empty" : "Occupied")
                                        </div>
                                    </td>
                                   
                                    <td>
                                        <div class="d-flex justify-content-center btn-group-sm ">

                                            <a class="btn btn-danger ms-2" asp-route-id="@item.Id" asp-controller="Bed" asp-action="Delete">
                                                <i class="fa fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                count++;
                            }

                        </tbody>
                    </table>
                </div>
                <!-- /.card-body -->
                <div class="card-footer clearfix">
                    <ul class="pagination pagination-sm m-0 float-end">
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" href="?page=@(Model.CurrentPage - 1)">Previous</a>
                        </li>

                        <!-- Page Numbers -->
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i">@i</a>
                            </li>
                        }

                        <!-- Next Button -->
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" href="?page=@(Model.CurrentPage + 1)">Next</a>
                        </li>
                    </ul>
                </div>
            </div>
            <!-- /.card -->
        </div>
    </div>
</div>
